version: '3.3'
services:
  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend # Ensure nginx starts after the frontend service is up
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
#    command: certonly --webroot -w /var/www/certbot --force-renewal --email samuelkong990719@gmail.com -d samuelkong.dev -d www.samuelkong.dev --agree-tos
  mongo:
    image: mongo:6.0.4
    command: --auth --bind_ip_all
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  backend:
    build: ./backend
    environment:
      WAIT_HOSTS: mongo:27017
    depends_on:
      - mongo # Ensure backend starts after the mongo service is up
      - frontend
    volumes:
      - react-build:/root/react-build
    ports:
      - "5000:5000"
  frontend:
    build:
      context: ./react-project
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    volumes:
      - react-build:/usr/share/nginx/html
volumes:
  mongo-data:
    driver: local
  react-build:
